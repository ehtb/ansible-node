# {{ ansible_managed }}

# Nginx server configuration
# Derived from: http://blog.dealspotapp.com/post/40184153657/node-js-production-deployment-with-nginx-varnish

upstream nodejs_app {
  server 127.0.0.1:3000;
  keepalive 64;
}

server {
  {% if site.ssl.enabled | default(false) -%}
  listen 443 ssl http2;
  {% else -%}
  listen 80;
  {% endif %}

  server_name  {{ site.host }}
  access_log   {{ www_root }}/{{ site.name }}/logs/access.log;
  error_log    {{ www_root }}/{{ site.name }}/logs/error.log;

  index index.htm index.html;
  error_page 400 404 500 502 503 504 /50x.html;

  charset utf-8;

  {% if env == 'development' -%}
  # See Virtualbox section at http://wiki.nginx.org/Pitfalls
  sendfile off;
  {%- endif %}

  {% if site.ssl.enabled | default(false) -%}
    {% if site.ssl.provider | default('manual') == 'manual' and site.ssl.cert is defined and site.ssl.key is defined -%}
      ssl_certificate         {{ nginx_path }}/ssl/{{ site.ssl.cert | basename }};
      ssl_certificate_key     {{ nginx_path }}/ssl/{{ site.ssl.key | basename }};
    {%- elif site.ssl.provider | default('manual') == 'letsencrypt' -%}
      ssl_certificate         {{ nginx_path }}/ssl/letsencrypt/{{ site.name }}-bundled.cert;
      ssl_certificate_key     {{ nginx_path }}/ssl/letsencrypt/{{ site.name }}.key;
    {%- elif site.ssl.provider | default('manual') == 'self-signed' -%}
      ssl_certificate         {{ nginx_path }}/ssl/{{ site.name }}.cert;
      ssl_trusted_certificate {{ nginx_path }}/ssl/{{ site.name }}.cert;
      ssl_certificate_key     {{ nginx_path }}/ssl/{{ site.name }}.key;
    {%- endif -%}
  {%- endif -%}

  location / {
    proxy_redirect off;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   Host              $http_host;
    proxy_set_header   X-NginX-Proxy     true;
    proxy_set_header   Connection        "";
    proxy_http_version 1.1;
    proxy_pass         http://nodejs_app;
    proxy_intercept_errors on;
  }
}

server {
    listen 80;
    server_name  {{ site.host }}
    return 301 https://$host$request_uri;
}
